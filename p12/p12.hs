-- Problem 12: Highly divisible triangular number
--
-- https://projecteuler.net/problem=12
--
-- The sequence of triangle numbers is generated by adding the natural numbers.
-- So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
--
-- Let us list the factors of the first seven triangle numbers:
--
--    1: 1
--    3: 1,3
--    6: 1,2,3,6
--    10: 1,2,5,10
--    15: 1,3,5,15
--    21: 1,3,7,21
--    28: 1,2,4,7,14,28
--    We can see that 28 is the first triangle number to have over five divisors.
--
-- What is the value of the first triangle number to have over five hundred divisors?

import Data.List

primesUnder n = sieve 2 0 n [2..(n - 1)]

sieve p i n xs
    | p * p > n = xs
    | p < n = sieve (xs !! i) (i + 1) n (filter (\x -> (x `mod` p /= 0) || (x == p)) xs)
    | otherwise = xs

triangle n = n * (n + 1) `div` 2

-- from http://rosettacode.org/wiki/Factors_of_an_integer ... hmmm
factors n = lows ++ (reverse $ map (div n) lows)
    where lows = filter ((== 0) . mod n) [1..truncate . sqrt $ fromIntegral n]

findFactorCount n xs
    | length (factors (triangle $ head xs)) > n = triangle $ head xs
    | otherwise = findFactorCount n (tail xs) 

main = putStrLn $ show $ findFactorCount 500 [1..]
