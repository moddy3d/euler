-- Problem 2
--
-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
-- By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
-- find the sum of the even-valued terms.

fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

takeFibsUnder n = takeFibsUnder' n 0 []
takeFibsUnder' n i xs
    | fibs !! i < n = takeFibsUnder' n (i + 1) (xs ++ [fibs !! i])
    | otherwise = xs

main = putStrLn $ show $ sum [x | x <- takeFibsUnder 4000000, x `mod` 2 == 0]
